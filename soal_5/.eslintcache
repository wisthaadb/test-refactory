[{"C:\\TestRefactory\\test-refactory\\soal_5\\src\\index.js":"1","C:\\TestRefactory\\test-refactory\\soal_5\\src\\reportWebVitals.js":"2","C:\\TestRefactory\\test-refactory\\soal_5\\src\\App.js":"3","C:\\TestRefactory\\test-refactory\\soal_5\\src\\Component\\MenuBar.js":"4","C:\\TestRefactory\\test-refactory\\soal_5\\src\\Component\\Grid.js":"5","C:\\TestRefactory\\test-refactory\\soal_5\\src\\Component\\Card.js":"6"},{"size":500,"mtime":1610882362969,"results":"7","hashOfConfig":"8"},{"size":362,"mtime":1610882362969,"results":"9","hashOfConfig":"8"},{"size":240,"mtime":1610951111992,"results":"10","hashOfConfig":"8"},{"size":2645,"mtime":1610949828622,"results":"11","hashOfConfig":"8"},{"size":967,"mtime":1610953174087,"results":"12","hashOfConfig":"8"},{"size":1834,"mtime":1610952867511,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"rxclup",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"16"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\TestRefactory\\test-refactory\\soal_5\\src\\index.js",[],["28","29"],"C:\\TestRefactory\\test-refactory\\soal_5\\src\\reportWebVitals.js",[],"C:\\TestRefactory\\test-refactory\\soal_5\\src\\App.js",[],"C:\\TestRefactory\\test-refactory\\soal_5\\src\\Component\\MenuBar.js",["30","31","32","33"],"import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport AccountCircle from '@material-ui/icons/AccountCircle';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Menu from '@material-ui/core/Menu';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n}));\r\n\r\nexport default function MenuBar() {\r\n  const classes = useStyles();\r\n  const [auth, setAuth] = React.useState(true);\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const open = Boolean(anchorEl);\r\n\r\n  const handleChange = (event) => {\r\n    setAuth(event.target.checked);\r\n  };\r\n\r\n  const handleMenu = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <FormGroup>\r\n      </FormGroup>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <Typography variant=\"h4\" className={classes.title} \r\n            align='left'>\r\n            Logo\r\n          </Typography>\r\n          {auth && (\r\n            <div>\r\n              <IconButton\r\n                aria-label=\"account of current user\"\r\n                aria-controls=\"menu-appbar\"\r\n                aria-haspopup=\"true\"\r\n                onClick={handleMenu}\r\n                color=\"inherit\"\r\n              >\r\n                <AccountCircle />\r\n              </IconButton>\r\n              <Menu\r\n                id=\"menu-appbar\"\r\n                anchorEl={anchorEl}\r\n                anchorOrigin={{\r\n                  vertical: 'top',\r\n                  horizontal: 'right',\r\n                }}\r\n                keepMounted\r\n                transformOrigin={{\r\n                  vertical: 'top',\r\n                  horizontal: 'right',\r\n                }}\r\n                open={open}\r\n                onClose={handleClose}\r\n              >\r\n                <MenuItem onClick={handleClose}>Profile</MenuItem>\r\n                <MenuItem onClick={handleClose}>My account</MenuItem>\r\n              </Menu>\r\n            </div>\r\n          )}\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}\r\n","C:\\TestRefactory\\test-refactory\\soal_5\\src\\Component\\Grid.js",[],"C:\\TestRefactory\\test-refactory\\soal_5\\src\\Component\\Card.js",["34","35","36"],{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","severity":1,"message":"42","line":7,"column":8,"nodeType":"43","messageId":"44","endLine":7,"endColumn":16},{"ruleId":"41","severity":1,"message":"45","line":9,"column":8,"nodeType":"43","messageId":"44","endLine":9,"endColumn":14},{"ruleId":"41","severity":1,"message":"46","line":10,"column":8,"nodeType":"43","messageId":"44","endLine":10,"endColumn":24},{"ruleId":"41","severity":1,"message":"47","line":33,"column":9,"nodeType":"43","messageId":"44","endLine":33,"endColumn":21},{"ruleId":"41","severity":1,"message":"48","line":5,"column":8,"nodeType":"43","messageId":"44","endLine":5,"endColumn":17},{"ruleId":"41","severity":1,"message":"49","line":7,"column":10,"nodeType":"43","messageId":"44","endLine":7,"endColumn":17},{"ruleId":"41","severity":1,"message":"50","line":40,"column":9,"nodeType":"43","messageId":"44","endLine":40,"endColumn":14},"no-native-reassign",["51"],"no-negated-in-lhs",["52"],"no-unused-vars","'MenuIcon' is defined but never used.","Identifier","unusedVar","'Switch' is defined but never used.","'FormControlLabel' is defined but never used.","'handleChange' is assigned a value but never used.","'CardMedia' is defined but never used.","'borders' is defined but never used.","'theme' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]